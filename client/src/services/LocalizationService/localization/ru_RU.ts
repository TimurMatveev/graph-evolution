export const RUSSIAN: Object = {
    "ActionBranchNewNode": "Создаёт новую смежную вершину с заданным состоянием",
    "ActionBreakApart": "Удаляет инцедентные рёбра, ведущие ко всем вершинам с заданным состоянием",
    "ActionConnectToAll": "Создаёт рёбра, ведущие ко всем вершинам с заданным состоянием",
    "ActionConnectToNearest": "Создаёт ребро, ведущее к ближайшей вершине с заданным состоянием. (Замечание: ближайшая вершина ищется методом поиска в ширину; если ближайшая среди смежных, ничего не происходит)",
    "ActionDeleteCurrentNode": "Удаляет текущую вершину",
    "Actions": "Действия",
    "Add": "Добавить",
    "Alphabet": "Алфавит",
    "AvaliableMachines": "Доступные автоматы",
    "BalancedBinTree": "Дерево",
    "BornOnIteration": "Пораждена на итерации",
    "BranchNewNode": "Создать смежную",
    "BreakApart": "Разорвать",
    "ChecksIfLinksCountInRange": "Условие для проверки, находится ли степень вершины в указанном диапозоне: от <АРГУМЕНТ_1> до <АРГУМЕНТ_2>",
    "ChecksIfNodeWasBornOnIterationInRange": "Условие для проверки, была ли вершина пораждена итерацией автомата, лежащей в указанном диапозоне: от <АРГУМЕНТ_1> до <АРГУМЕНТ_2>. (Замечание: инициализированный граф считается нулевой итерацией)",
    "ChecksPreviousState": "Условие для проверки состояния вершины на предыдущей итерации",
    "Cicle": "Цикл",
    "Complete": "Полный",
    "CompleteBipartite": "Полный Двудольный",
    "Conditions": "Условия",
    "ConnectToAll": "Связать",
    "ConnectToNearest": "Связать с ближайшей",
    "DefineMachineHere": "Определите автомат",
    "DeleteCurrentNode": "Удалить",
    "Faster": "Быстрее",
    "FromState": "От состояния",
    "GraphBalancedBinTree": "Генерирует сбалансированное бинарное дерево с N уровнями, где начальная вершина - нулевой уровень",
    "GraphCicle": "Генерирует цикл длины N",
    "GraphComplete": "Генерирует полный граф на N вершинах",
    "GraphCompleteBipartite": "Генерирует полный двудольный граф, где в одной доле N вершин, а в другой M",
    "GraphEvolution": "Эволюция на графах",
    "GraphGrid": "Генерирует граф сеточной структуры размера (N x M)",
    "GraphGrid3": "Генерирует трехмерный граф сеточной структуры размера (N x M x K)",
    "GraphNoLinks": "Генерирует N изолированных вершин",
    "Grid": "Сетка",
    "Grid3": "Сетка 3D",
    "InitialGraph": "Начальный граф",
    "Initialize": "Инициализировать автомат",
    "InitializeGraphOrMachineHere": "Задайте начальный граф и инструкции для автомата",
    "Instructions": "Инструкции",
    "LinksCount": "Степень вершины",
    "LoadMachine": "Загрузить автомат",
    "MachineInstructions": "Инструкции для автомата",
    "NameAndDescription": "Название и описание",
    "NameOfPreviousState": "Название предыдущего состояния",
    "NewMachineDescription": "Описание для нового автомата",
    "NewMachineName": "Название для нового автомата",
    "NoLinks": "Без ребер",
    "Pause": "Пауза",
    "Preview": "Предпросмотр",
    "PreviousState": "Предыдущее состояние",
    "Remove": "Удалить",
    "Save": "Сохранить",
    "SaveMachine": "Сохранить автомат",
    "SelectMachineHere": "Выберите автомат",
    "Slower": "Медленнее",
    "Start": "Начать",
    "TerminatedAllNodesDeleted": "АВТОМАТ ОСТАНОВЛЕН\nВсе вершины удалены",
    "TerminatedAllNodesSetStopState": "АВТОМАТ ОСТАНОВЛЕН\nВсе вершины перешли в состояние \"stop\"",
    "ToState": "К состоянию",
    "Update": "Обновить"
}